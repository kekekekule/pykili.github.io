I"ae<h1 id="файлы">Файлы</h1>

<h2 id="содержание">Содержание</h2>

<ol>
  <li><a href="#разбиение-строк">Разбиение строк. Метод <code class="language-plaintext highlighter-rouge">.split()</code></a></li>
  <li><a href="#чтение-файлов">Чтение файлов</a></li>
  <li><a href="#пути-к-файлам">Пути к файлам</a></li>
  <li><a href="#пример-удаление-запятых">Пример. Удаление запятых</a></li>
  <li><a href="#на-чём-можно-потренироваться">Задачи для тренировки</a>
    <ol>
      <li><a href="#предложения">Предложения</a></li>
      <li><a href="#статистика">Статистика</a></li>
    </ol>
  </li>
  <li><a href="#домашнее-задание"><strong>Домашнее задание</strong></a></li>
</ol>

<h2 id="разбиение-строк">Разбиение строк</h2>

<p>Мы уже видели, что разбить строку на символы можно с помощью функции <code class="language-plaintext highlighter-rouge">list()</code>:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="n">string</span> <span class="o">=</span> <span class="s">"Hello"</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">characters</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="n">string</span><span class="p">)</span>
</code></pre></div></div>

<p>А как разбить строку на отдельные слова? Для этого у строки есть специальный метод <code class="language-plaintext highlighter-rouge">.split()</code>, который возвращает список подстрок:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="n">cities</span> <span class="o">=</span> <span class="s">'Москва Санкт-Петербург Казань Тверь Иркутск'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">words</span> <span class="o">=</span> <span class="n">cities</span><span class="p">.</span><span class="n">split</span><span class="p">()</span>
<span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">words</span><span class="p">)</span>
<span class="p">[</span><span class="s">'Москва'</span><span class="p">,</span> <span class="s">'Санкт-Петербург'</span><span class="p">,</span> <span class="s">'Казань'</span><span class="p">,</span> <span class="s">'Тверь'</span><span class="p">,</span> <span class="s">'Иркутск'</span><span class="p">]</span>
</code></pre></div></div>

<p>По умолчанию <code class="language-plaintext highlighter-rouge">.split()</code> делит строку по пробелам, символам табуляции и переноса строки.
Кроме того, при таком вызове <code class="language-plaintext highlighter-rouge">.split()</code>, в результирующий список не входят пустые строки.</p>

<p>Если указать строку в качестве аргумента <code class="language-plaintext highlighter-rouge">.split()</code>, то вместо пробельных символов разбиение будет проходить по этой строке.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="n">pancake</span> <span class="o">=</span> <span class="s">'молоко,яйца,мука,сметана'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">pancake_ingredients</span> <span class="o">=</span> <span class="n">pancake</span><span class="p">.</span><span class="n">split</span><span class="p">(</span><span class="s">','</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">pancake_ingredients</span><span class="p">)</span>
<span class="p">[</span><span class="s">'молоко'</span><span class="p">,</span> <span class="s">'яйца'</span><span class="p">,</span> <span class="s">'мука'</span><span class="p">,</span> <span class="s">'сметана'</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">burger</span> <span class="o">=</span> <span class="s">"котлета, булочка, кетчуп, салат"</span>
<span class="o">&gt;&gt;&gt;</span> <span class="c1"># Здесь мы должны использовать разбиение по строке из двух символов:
</span><span class="p">...</span> <span class="c1"># запятой и пробелу, чтобы в начале полученных строк не осталось пробелов:
</span><span class="p">...</span> <span class="n">buger_ingredients</span> <span class="o">=</span> <span class="n">burger</span><span class="p">.</span><span class="n">split</span><span class="p">(</span><span class="s">', '</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">burger_ingredients</span><span class="p">)</span>
<span class="p">[</span><span class="s">'котлета'</span><span class="p">,</span> <span class="s">'булочка'</span><span class="p">,</span> <span class="s">'кетчуп'</span><span class="p">,</span> <span class="s">'салат'</span><span class="p">]</span>
</code></pre></div></div>

<p>Обратите внимание, что при ручном указании строки-разделителя, пустые строки не выбрасываются:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="n">coffee</span> <span class="o">=</span> <span class="s">'арабика    робуста  либерика'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">varieties</span> <span class="o">=</span> <span class="n">coffee</span><span class="p">.</span><span class="n">split</span><span class="p">()</span>
<span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">varieties</span><span class="p">)</span>
<span class="p">[</span><span class="s">'арабика'</span><span class="p">,</span>    <span class="s">'робуста'</span><span class="p">,</span>  <span class="s">'либерика'</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">splited_by_space</span> <span class="o">=</span> <span class="n">coffee</span><span class="p">.</span><span class="n">split</span><span class="p">(</span><span class="s">' '</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">splited_by_space</span><span class="p">)</span>
<span class="p">[</span><span class="s">'арабика'</span><span class="p">,</span> <span class="s">''</span><span class="p">,</span> <span class="s">''</span><span class="p">,</span> <span class="s">''</span><span class="p">,</span> <span class="s">'робуста'</span><span class="p">,</span> <span class="s">''</span><span class="p">,</span> <span class="s">'либерика'</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">tea</span> <span class="o">=</span> <span class="s">'black,white,,green'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">varieties</span> <span class="o">=</span> <span class="n">tea</span><span class="p">.</span><span class="n">split</span><span class="p">(</span><span class="s">','</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">varieties</span><span class="p">)</span>
<span class="p">[</span><span class="s">'black'</span><span class="p">,</span> <span class="s">'white'</span><span class="p">,</span> <span class="s">''</span><span class="p">,</span> <span class="s">'green'</span><span class="p">]</span>
</code></pre></div></div>

<h2 id="чтение-файлов">Чтение файлов</h2>

<p>Чтение происходит с помощью функции <code class="language-plaintext highlighter-rouge">open()</code>, которой необходимо передать строку с указанием имени файла, а точнее системного пути (<a href="#Пути-к-файлам">подробнее см. далее</a>):</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="n">f</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s">'text.txt'</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s">'utf-8'</span><span class="p">)</span>  <span class="c1"># кодировка может быть и другой, но с UTF-8 работать приятнее
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">text</span> <span class="o">=</span> <span class="n">f</span><span class="p">.</span><span class="n">read</span><span class="p">()</span>  <span class="c1"># Теперь весь текст из файла находится внутри переменной text
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">f</span><span class="p">.</span><span class="n">close</span><span class="p">()</span>
</code></pre></div></div>

<p>Обязательно нужно закрыть файл, это как помыть руки перед едой! Иначе другим программам операционная система может запретить доступ к этому файлу. Для того, чтобы не забывать закрывать файлы, придуман специальный блок-мойдодыр <code class="language-plaintext highlighter-rouge">with</code>, который сам закроет наш файл. Принято пользоваться именно им для работы с файлами.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s">'text.txt'</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s">'utf-8'</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
<span class="p">...</span>     <span class="n">text</span> <span class="o">=</span> <span class="n">f</span><span class="p">.</span><span class="n">read</span><span class="p">())</span>   <span class="c1"># по умолчанию .read() читает файл целиком
</span><span class="p">...</span>     <span class="n">splited_text</span> <span class="o">=</span> <span class="n">text</span><span class="p">.</span><span class="n">split</span><span class="p">()</span>    <span class="c1"># список из слов, иногда с «прилипшими» знаками препинания
</span></code></pre></div></div>

<p>Вместо того, чтобы прочесть файл в одну большую строку, включающую символы переноса строки, можно прочесть его в список отдельных строк:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s">'text.txt'</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s">'utf-8'</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
<span class="p">...</span>     <span class="n">lines</span> <span class="o">=</span> <span class="n">f</span><span class="p">.</span><span class="n">readlines</span><span class="p">()</span>   <span class="c1"># список из строк, каждая, быть может кроме последней, заканчивается символом переноса строки
</span><span class="p">...</span>
<span class="o">&gt;&gt;&gt;</span> <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s">'text.txt'</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s">'utf-8'</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
<span class="p">...</span>     <span class="n">text</span> <span class="o">=</span> <span class="n">f</span><span class="p">.</span><span class="n">read</span><span class="p">()</span>
<span class="c1"># Выходим из блока with ... as, больше читать из файла нечего
</span><span class="p">...</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">lines</span> <span class="o">=</span> <span class="n">text</span><span class="p">.</span><span class="n">splitlines</span><span class="p">()</span>    <span class="c1"># список из строк, символы перевода строки отброшены
</span></code></pre></div></div>

<p>Может быть полезно читать файл по одной строке. Это можно сделать в цикле <code class="language-plaintext highlighter-rouge">for</code>:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s">'text.txt'</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s">'utf-8'</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
<span class="p">...</span>     <span class="k">for</span> <span class="n">line</span> <span class="ow">in</span> <span class="n">f</span><span class="p">:</span>  <span class="c1"># здесь строки тоже заканчиваются на символ переноса строки
</span><span class="p">...</span>         <span class="k">if</span> <span class="n">line</span><span class="p">.</span><span class="n">endswith</span><span class="p">(</span><span class="s">'</span><span class="se">\n</span><span class="s">'</span><span class="p">):</span>
<span class="p">...</span>             <span class="k">print</span><span class="p">(</span><span class="s">'Строка кончается на символ переноса строки'</span><span class="p">)</span>
<span class="p">...</span>         <span class="k">else</span><span class="p">:</span>
<span class="p">...</span>             <span class="k">print</span><span class="p">(</span><span class="s">'Строка не заканчивается на символ переноса строки'</span><span class="p">)</span>
<span class="p">...</span>         <span class="n">line</span> <span class="o">=</span> <span class="n">line</span><span class="p">.</span><span class="n">strip</span><span class="p">()</span>    <span class="c1"># удаляем пробельные символы, в том числе перенос строки, сначала и сконца строки
</span><span class="p">...</span>         <span class="k">if</span> <span class="ow">not</span> <span class="n">line</span><span class="p">.</span><span class="n">endswith</span><span class="p">(</span><span class="s">'</span><span class="se">\n</span><span class="s">'</span><span class="p">):</span>
<span class="p">...</span>             <span class="k">print</span><span class="p">(</span><span class="s">'Теперь переноса строки точно нет'</span><span class="p">)</span>
<span class="p">...</span>         <span class="k">if</span> <span class="n">line</span><span class="p">.</span><span class="n">startswith</span><span class="p">(</span><span class="s">'Давным-давно'</span><span class="p">):</span>    <span class="c1"># проверяем не начинается ли строка с данной строки
</span><span class="p">...</span>             <span class="k">print</span><span class="p">(</span><span class="s">'И жили они долго и счастливо'</span><span class="p">)</span>
<span class="p">...</span>         <span class="k">print</span><span class="p">(</span><span class="n">line</span><span class="p">.</span><span class="n">count</span><span class="p">(</span><span class="s">' '</span><span class="p">))</span>    <span class="c1"># считаем число пробелов в строке
</span><span class="p">...</span>         <span class="k">for</span> <span class="n">word</span> <span class="ow">in</span> <span class="n">line</span><span class="p">.</span><span class="n">split</span><span class="p">():</span>
<span class="p">...</span>             <span class="n">word</span> <span class="o">=</span> <span class="n">word</span><span class="p">.</span><span class="n">replace</span><span class="p">(</span><span class="s">'.'</span><span class="p">,</span> <span class="s">''</span><span class="p">)</span>
<span class="p">...</span>             <span class="k">if</span> <span class="n">word</span><span class="p">.</span><span class="n">isupper</span><span class="p">()</span> <span class="ow">and</span> <span class="nb">len</span><span class="p">(</span><span class="n">word</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">:</span>    <span class="c1"># слово написано заглавными буквами, .islower() - наоборот
</span><span class="p">...</span>                 <span class="k">print</span><span class="p">(</span><span class="n">word</span><span class="p">,</span> <span class="s">'- быть может аббревиатура?'</span><span class="p">)</span>
</code></pre></div></div>

<h2 id="пути-к-файлам">Пути к файлам</h2>

<p>Выше в вызове <code class="language-plaintext highlighter-rouge">open()</code> указывалось имя файла. В этом случае, питон ищет файл с соответствующим именем в той же папке, где была запущена программа. Что же делать, если требуется взять файл из другой папки?</p>

<p>В этом случае нужно указать путь к файлу: строку, разделённую символами <code class="language-plaintext highlighter-rouge">/</code>. Например, если нужно взять файл <code class="language-plaintext highlighter-rouge">text.txt</code>, лежащий в папке <code class="language-plaintext highlighter-rouge">folder</code>, находящейся в той же папке, где запущена программа, то необходимо написать <code class="language-plaintext highlighter-rouge">open('folder/text.txt')</code>. Такие пути называются относительными.</p>

<p>Абсолютными называются пути, которые начинаются с имени тома (в Windows) или корневого каталога (в Unix подобных операционных системах). Например: ‘C:/Users/Anna/Desktop/dimploma.txt’` (Windows) или ‘/Users/anna/Desktop/diploma.txt’ (macOS).</p>

<p>Кроме того, частью относительного пути может быть специальная подстрока <code class="language-plaintext highlighter-rouge">..</code>, которая обозначает родительскую папку. В качестве примера рассмотрим следующее дерево файлов:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>C:/
  Users/
    Anna/
       python_scripts/
         fix_grammar.py    &lt;- Этот файл мы запускаем из этой папки
         example.txt
       Desktop/
         diploma.txt
    Yuri/
       Desktop/
         diploma.txt
</code></pre></div></div>

<p>Тогда, если необходимо запустить <code class="language-plaintext highlighter-rouge">fix_grammar.py</code> и открыть в нем файл example.txt, то можно указать относительный путь <code class="language-plaintext highlighter-rouge">example.txt</code> или абсолютный путь <code class="language-plaintext highlighter-rouge">C:/Users/Anna/python_scripts/example.txt</code>. Если нужно открыть диплом Анны, то укажем <code class="language-plaintext highlighter-rouge">C:/Users/Anna/Desktop/diploma.txt</code> или <code class="language-plaintext highlighter-rouge">../Desktop/diploma.txt</code>. Диплом Юрия: <code class="language-plaintext highlighter-rouge">C:/Users/Yuri/Desktop/diploma.txt</code> или <code class="language-plaintext highlighter-rouge">../../Yuri/Desktop/diploma.txt</code>.</p>

<h2 id="пример-удаление-запятых">Пример. Удаление запятых</h2>

<p>Пусть дан файл <code class="language-plaintext highlighter-rouge">text.txt</code>, требуется вывести содержащийся в нем текст предварительно удалив запятые.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s">'text.txt'</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
<span class="p">...</span>     <span class="n">text</span> <span class="o">=</span> <span class="n">f</span><span class="p">.</span><span class="n">read</span><span class="p">()</span>
<span class="p">...</span> <span class="c1"># Лучше не делать лишних операций пока файл открыт, а поскорее закрыть его
</span><span class="p">...</span>
<span class="n">text</span> <span class="o">=</span> <span class="n">text</span><span class="p">.</span><span class="n">replace</span><span class="p">(</span><span class="s">','</span><span class="p">,</span> <span class="s">''</span><span class="p">)</span>    <span class="c1"># заменяем одну подстроку на другую
</span><span class="k">print</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>
</code></pre></div></div>

<p>Подумайте как можно улучшить этот код на случай, если вы правите очень большой файл и его не удастся загрузить целиком в оперативную память компьютера.</p>

<h2 id="на-чём-можно-потренироваться">На чём можно потренироваться?</h2>

<h3 id="предложения">Предложения</h3>
<p>Попробуйте поделить текст, взятый из файла на отдельные предложения. Учтите, что предложение может занимать несколько строк.</p>

<h3 id="статистика">Статистика</h3>
<ul>
  <li>Посчитайте число гласных и согласных в тексте.</li>
  <li>Посчитайте сколько раз в тексте встретился предлог «под» или любой другой.</li>
</ul>

<h2 id="домашнее-задание">Домашнее задание</h2>

<p>Программа должна открывать файл с русским текстом в UTF-8 и сообщать про него следующую информацию (по вариантам):</p>

<ol>
  <li>чему равно среднее число слов в строке;</li>
  <li>во сколько раз самая короткая строка короче самой длинной;</li>
  <li>во сколько раз слов длины 3 больше, чем слов длины 1 (если слов длины 1 нет вообще, программа должна об этом сообщить);</li>
  <li>какой процент от общего количества слов не оканчивается знаком препинания (можно взять только запятую и точку);</li>
  <li>какой процент слов имеет длину больше 10 символов;</li>
  <li>какой процент слов начинается с большой буквы;</li>
  <li>какой процент строк содержит больше 5 слов.</li>
</ol>

<p>Возьмите для этого задания текст произведения Тургенева - <a href="https://storage.yandexcloud.net/pykili/mumu.txt">МУМУ</a></p>
:ET